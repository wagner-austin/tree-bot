name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint-test:
    name: Lint, type-check, and test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.10", "3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip and install Poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry==1.7.1

      - name: Configure Poetry (in-project venv)
        run: poetry config virtualenvs.in-project true

      - name: Cache virtualenv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-py${{ matrix.python-version }}-

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi

      - name: Ruff (lint)
        run: |
          poetry run ruff check .
          poetry run ruff format --check .

      - name: mypy (strict)
        run: poetry run mypy --strict src

      - name: Tests
        run: poetry run pytest -q

